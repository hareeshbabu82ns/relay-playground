type Counter {
  counter: Int
}

type Link {
  id: ID!
  title: String
  url: String
}

# A connection to a list of items.
type LinkConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [LinkEdge]
}

# An edge in a connection.
type LinkEdge {
  # The item at the end of the edge
  node: Link

  # A cursor for use in pagination
  cursor: String!
}

type Mutation {
  incrimentCounter: Int
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}

type Query {
  counter: Int
  data: [Counter]
  store: Store
}

type Store {
  linkConnection(after: String, first: Int, before: String, last: Int): LinkConnection
}
